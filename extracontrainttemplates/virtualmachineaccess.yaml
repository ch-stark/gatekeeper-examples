apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: virtualmachine-access-control
spec:
  crd:
    spec:
      # No custom CRD needed for this constraint
  targets:
  - target: admission.k8s.gatekeeper.sh
  rego: |
    package virtualmachine_access_control

    # Ensure every VirtualMachine has an 'environment' label
    violation[{"msg": msg}] {
      input.review.kind.kind == "VirtualMachine"
      not input.review.object.metadata.labels.environment
      msg := "VirtualMachine must have an 'environment' label"
    }

    # Ensure access is allowed based on environment and user groups
    violation[{"msg": msg}] {
      input.review.kind.kind == "VirtualMachine"
      environment := input.review.object.metadata.labels.environment
      user_groups := input.review.userInfo.groups

      # Check for dev environment and dev group
      environment == "dev" && not any ug in user_groups { ug == "dev-group" } => msg := "Access denied: Only dev-group can access dev environments"

      # Check for prod environment and prod group
      environment == "prod" && not any ug in user_groups { ug == "prod-group" } => msg := "Access denied: Only prod-group can access prod environments"
    }
