apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: virtualmachine-access-control
spec:
  crd:
    spec:
      names:
        kind: VirtualMachineAccess
  targets:
  - target: admission.k8s.gatekeeper.sh
    rego: |
      package virtualmachine_access_control

      # Ensure every VirtualMachine has an 'environment' label
      violation[{"msg": msg}] {
        input.review.kind.kind == "VirtualMachine"
        not input.review.object.metadata.labels.environment
        msg := "VirtualMachine must have an 'environment' label"
      }

      # Ensure access is allowed based on environment and user groups
      violation[{"msg": msg}] {
        input.review.kind.kind == "VirtualMachine"
        environment := input.review.object.metadata.labels.environment
        user_groups := input.review.userInfo.groups

        allowed_env := input.parameters.environment
        allowed_groups := input.parameters.allowedGroups

        environment == allowed_env
        not any(g in allowed_groups; g in user_groups)
        msg := sprintf("Access denied: Only %s can access %s environments", [allowed_groups, allowed_env])
      }
