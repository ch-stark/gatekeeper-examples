apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: validateuserinfo
spec:
  crd:
    spec:
      names:
        kind: ValidateUserInfo
      validation:
        openAPIV3Schema:
          type: object
          properties:
            requiredGroupDev:
              type: array
              items:
                type: string
            requiredGroupProd:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8svalidateuserinfo
        violation[{"msg": msg}] {
          environment := input.review.object.metadata.labels.environment
          environment == "dev"

          provided := {user_groups | user_groups := input.review.userInfo.groups[_]}
          required := {group | group := input.parameters.requiredGroupDev[_]}

          missing := required - provided

          count(missing) > 0
          msg := sprintf("you must provide labels: %v", [missing])
        }


        violation[{"msg": msg}] {
          environment := input.review.object.metadata.labels.environment
          environment == "prod"

          provided := {user_groups | user_groups := input.review.userInfo.groups[_]}
          required := {group | group := input.parameters.requiredGroupProd[_]}

          missing := required - provided

          count(missing) > 0
          msg := sprintf("you must provide labels: %v", [missing])
        }
